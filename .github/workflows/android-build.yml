name: Android Build & Deploy

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            mobile/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps || npm install --legacy-peer-deps
          cd mobile && npm ci --legacy-peer-deps || npm install --legacy-peer-deps

      - name: Setup Android environment
        run: |
          cd mobile/android
          chmod +x gradlew
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

      - name: Decode keystore (for release builds)
        if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          if [ ! -z "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > mobile/android/app/release.keystore
          fi

      - name: Build Debug APK
        if: github.event.inputs.build_type != 'release'
        run: |
          cd mobile/android
          ./gradlew clean assembleDebug --no-daemon --console=plain
        env:
          JAVA_OPTS: -Xmx4g -XX:MaxMetaspaceSize=512m

      - name: Build Release APK
        if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
        run: |
          cd mobile/android
          ./gradlew clean assembleRelease --no-daemon --console=plain
        env:
          JAVA_OPTS: -Xmx4g -XX:MaxMetaspaceSize=512m
          ANDROID_KEYSTORE_FILE: release.keystore
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Debug APK
        if: github.event.inputs.build_type != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk-${{ github.sha }}
          path: mobile/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Upload Release APK
        if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: release-apk-${{ github.sha }}
          path: mobile/android/app/build/outputs/apk/release/app-release.apk
          retention-days: 90

      - name: Create Release
        if: github.ref == 'refs/heads/main' && github.event.inputs.build_type == 'release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release Build ${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            mobile/android/app/build/outputs/apk/release/app-release.apk
          body: |
            ## DealersCloud Mobile App Release
            
            Build: ${{ github.run_number }}
            Commit: ${{ github.sha }}
            
            ### Download
            - [Download APK](https://github.com/${{ github.repository }}/releases/download/v${{ github.run_number }}/app-release.apk)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post build info
        if: always()
        run: |
          echo "Build completed with status: ${{ job.status }}"
          echo "APK location: mobile/android/app/build/outputs/apk/"
          if [ -f mobile/android/app/build/outputs/apk/debug/app-debug.apk ]; then
            ls -lh mobile/android/app/build/outputs/apk/debug/app-debug.apk
          fi
          if [ -f mobile/android/app/build/outputs/apk/release/app-release.apk ]; then
            ls -lh mobile/android/app/build/outputs/apk/release/app-release.apk
          fi